# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return
BASH_DIR=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )

source ~/dotfiles/git/git-prompt.sh

# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apaache would find /var/log/apache
shopt -s cdspell

# History Options
#
# Don't put duplicate lines in the history.
#
# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The '&' is a special pattern which suppresses duplicate entries.

# Aliases {{{
alias ls='echo '' && ls -hF --color=tty'                 # classify files in colour
alias dir='ls --color=auto --format=vertical'
alias vdir='ls --color=auto --format=long'
alias ll='ls -l'                              # long list
alias la='ls -A'                              # all but . and ..

alias df='df -h'
alias du='du -h'

alias cd..='cd ..'

alias grep='grep --color'                     # show differences in colour

# git related
alias gs='git status'
alias gb='git branch'
alias go='git checkout'
alias gl='git log'
alias ga='git add'
alias gaa='git add --all'
alias gd='git diff'
alias gg='git grep -n --break --heading'
alias gci='git commit'
alias grm='git-rm'
alias gmv='git-mv'
alias gti='git'

alias fn='find -name'

alias cim='vim'
# }}}

# Functions {{{
function up {
  export back=$PWD
  newDir=$PWD
  for (( c=0; c<$1; c++ ))
  do
    newDir=$newDir/..
  done
  cd $newDir
}

function back {
  cd $back
}

function cdd () {
    cd $1
    ls
}

function PS1_pscount {
  ps -a | wc -l
}
# }}}

# Variables {{{
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_SHOWCOLORHINTS=1

source ~/dotfiles/git/git-prompt.sh

# history
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit'
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls' # Ignore the ls command as well

__prompt_command() {

  local EXIT="$?"

  # colors
  black="\[\033[0;38;5;0m\]"
  red="\[\033[01;31m\]"
  orange="\[\033[0;38;5;130m\]"
  green="\[\033[01;32;1m\]"
  yellow="\[\033[01;33m\]"
  blue="\[\033[0;38;5;4m\]"
  bblue="\[\033[0;38;5;12m\]"
  magenta="\[\033[0;38;5;55m\]"
  cyan="\[\033[0;38;5;6m\]"
  white="\[\033[0;0m\]"
  coldblue="\[\033[0;38;5;33m\]"
  smoothblue="\[\033[0;38;5;111m\]"
  iceblue="\[\033[01;36m\]"
  turqoise="\[\033[0;38;5;50m\]"
  smoothgreen="\[\033[0;38;5;42m\]"

  if [ $EXIT != 0 ]; then
    status="[Error: "$EXIT"]"
  else
    status=""
  fi

# data
  user="\u@\h"
  path="\w"
  processes="ps: `PS1_pscount`"
  time="\D{%H:%M}"
  gitbranch="\$(__git_ps1)"
  end="\$"

  export PS1="\n$green$user $iceblue$path $red$gitbranch $magenta$status \n$yellow$time $white$end "

}

PROMPT_COMMAND=__prompt_command

# ls --color
ls_dir="di=1;95:" # Directories are bold and pink 
ls_fi="fi=0;97:" # Normal files are white
ls_ex="ex=1;91:" # Executables are bold and light green
ls_ln="ln=0;91:" # Symlinks are red
ls_mi="mi=9;37:" # Missing symlinks are strikethrough and grey
ls_or="or=9;90:" # Orphaned symlinks are strikethrough and dark grey

export LS_COLORS="$ls_dir$ls_fi$ls_ex$ls_ln$ls_mi$ls_or"
# }}}
# Completion options {{{
bind TAB:menu-complete
bind '"\e[Z": menu-complete-backward'
bind "set show-all-if-ambiguous on"
# }}}
