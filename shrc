# Setup things that are common in bash and zsh

# Variables {{{

# path
PATH=$PATH:~/dotfiles/bin

export LANG=en_US.UTF-8
export EDITOR='nvim'
export LESS=R

# history
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit'
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls' # Ignore the ls command as well
export HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
export SAVEHIST=500
export HISTSIZE=2000

if [[ -n $TMUX ]]; then
  export TERM=screen-256color
else
  export TERM=xterm-256color
fi

# ls --color
ls_dir="di=1;95:" # Directories are bold and pink
ls_fi="fi=0;97:" # Normal files are white
ls_ex="ex=1;91:" # Executables are bold and light green
ls_ln="ln=0;91:" # Symlinks are red
ls_mi="mi=9;37:" # Missing symlinks are strikethrough and grey
ls_or="or=9;90:" # Orphaned symlinks are strikethrough and dark grey
export LS_COLORS="$ls_dir$ls_fi$ls_ex$ls_ln$ls_mi$ls_or"

#colors for man pages
man() {
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    command man "$@"
}

FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --no-mouse"
# }}}

# Functions {{{

# Not sure how to handle the name clash of go and the git checkout alias but 
# this is good enough for now.
function go {
  if test -f go.mod || test -f main.go; then
    env go
  else
    ~/dotfiles/bin/go
  fi
}

learnx() {
  exec elinks -dump "https://learnxinyminutes.com/docs/$1/" | less
}

function up {
  newDir=$PWD
  for (( c=0; c<$1; c++ ))
  do
    newDir=$newDir/..
  done
  cd "$newDir" || return
}

function cdd () {
    cd "$1" || return
    ls
}

function root {
  local gitroot
  gitroot=$(git rev-parse --show-toplevel 2> /dev/null)
  if [[ -n $gitroot ]]; then
    cd "$gitroot" || return
  else
    cd /
  fi
}

# cd to a directory and run ls in the upper-left pane
split_cd(){
  PANE=$(tmux list-panes | grep 0: | rev | cut -d ' ' -f 1 | rev)
  cd "$@" || return
  tmux respawn-pane -k -t "$PANE" "ls --color $PWD && read"
}

colorize_less() {
  pygmentize -O style=emacs -g "$1" | \less
}

cp_to() {
  if [[ -n "$DOTFILES_CP_FROM" ]]; then
    cp "$DOTFILES_CP_FROM" "$1"
    unset DOTFILES_CP_FROM
  else
    DOTFILES_CP_TO="$PWD/$1"
  fi
}
cp_from() {
  if [[ -n "$DOTFILES_CP_TO" ]]; then
    cp "$1" "$DOTFILES_CP_TO"
    unset DOTFILES_CP_TO
  else
    DOTFILES_CP_FROM="$PWD/$1"
  fi
}
mv_to() {
  if [[ -n "$DOTFILES_MV_FROM" ]]; then
    mv "$DOTFILES_MV_FROM" "$1"
    unset DOTFILES_MV_FROM
  else
    DOTFILES_MV_TO="$PWD/$1"
  fi
}
mv_from() {
  if [[ -n "$DOTFILES_MV_TO" ]]; then
    mv "$1" "$DOTFILES_MV_TO"
    unset DOTFILES_MV_TO
  else
    DOTFILES_MV_FROM="$PWD/$1"
  fi
}

ln_to() {
  if [[ -n "$DOTFILES_LN_FROM" ]]; then
    local DEST
    DEST=$(realpath --relative-to="$PWD" "$DOTFILES_LN_FROM")
    ln -s "$DEST" "$1"
    unset DOTFILES_LN_FROM
  else
    DOTFILES_LN_TO="$PWD/$1"
  fi
}
ln_from() {
  if [[ -n "$DOTFILES_LN_TO" ]]; then
    local DEST
    DEST=$(realpath --relative-to="$DOTFILES_LN_TO" "$1")
    ln -s "$DEST" "$DOTFILES_LN_TO"
    unset DOTFILES_LN_TO
  else
    DOTFILES_LN_FROM="$PWD/$1"
  fi
}

g() {
  if [[ $# -eq 0 ]]; then
    git help --all | sed -rn 's/^\s+(.*)/\1/p' | cut -d ' ' -f 1 | fzf --preview "git {} --help"
  else
    git "$@"
  fi
}

# }}}

# Aliases {{{
alias ls='echo '' && \ls -hFH --color=tty'                 # classify files in colour
alias l='ls'
alias ll='ls -l'                              # long list
alias la='ls -A'                              # all but . and ..

alias df='df -h'
alias du='du -h'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

alias grep='grep --color'                     # show differences in colour

# git related
alias gs='git status'
alias gst='git status --untracked-files=no'
alias gb='git branch'
#alias go='git checkout'
#alias ga='git add'
alias gaa='git add --all'
#alias gd='git diff'
alias gci='git commit'
alias grm='git-rm'
alias gmv='git-mv'
alias gti='git'
alias gco='git commit'
alias gcom='git commit -m'
alias gap='git add -p'
alias gdt='git difftool'
if command -v tig &> /dev/null; then
  alias gg='tig grep'
  alias gl='tig log'
else
  alias gg='git grep -n --break --heading'
  alias gl='git log'
fi


# Colorize cat and less
if [[ -x "$(command -v pygmentize)" ]]; then
  alias cat='pygmentize -O style=emacs -g'
  alias less='colorize_less'
fi

alias fn='find -name'

alias cim='vim'
# }}}

